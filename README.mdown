flvplayer
=========

flvplayer is a FLV player, built in ActionScript.

The main goals of the project are:

- have a functional player with a proper open source license (MIT)
- being able to compile the player using only Open Source tools ([MTASC](http://www.mtasc.org/), [swfmill](http://swfmill.org/), Ruby)
- have a simple codebase that can be used on a more complex project


## Usage

### Embedding

    <script type="text/javascript" src="/swfobject.js"></script>
    <div id="flashcontent">
      This text is replaced by the Flash movie.
    </div>
    <script type="text/javascript">
      var so = new SWFObject("flvplayer.swf", "flvplayer", "640", "360", "8", "#000000");
      so.addParam('allowFullScreen',true); // this is needed if you want fullscreen video playing
      so.addVariable('aspect_ratio',16/9);
      so.addVariable('placeholder','placeholder.jpg');
      so.addVariable('video_path','video.flv');
      so.write("flashcontent");
    </script>


You can use the following variables in your HTML:

    placeholder  - URL to the image you want to display as a placeholder.
                   It is displayed before the video plays, and after it ends.
    
    video_path   - URL to the FLV video you want to play.
    
    autoplay     - Boolean. If 'true', the video will play when the SWF
                   is loaded.
    
    aspect_ratio - Default aspect ratio to be used for your movie.
                   By default it's 16/9, but if the FLV contains width
                   and height metadata it will be used for auto aspect_ratio
                   calculation.


## FLV Streaming

The player supports FLV pseudostreaming. Take a look at the sample sinatra
app, based on http://github.com/hubertlepicki/sinatra-flv-streaming-example

The sinatra app requires the 'rack-contrib' gem, so install it with:

    $ gem install rack-contrib

To use pseudostreaming in your FLV files, they *need* to contain some
metadata. You can embed this metadata by using flvtool2:

    $ sudo gem install flvtool2
    $ flvtool2 -U your_video_file.flv

**NOTE:** Don't even think of running the sinatra app in a production environment. Use a *real* webserver and take a look at these articles:

- [Lighttpd](http://blog.lighttpd.net/articles/2006/03/09/flv-streaming-with-lighttpd)
- [Apache](http://tperspective.blogspot.com/2009/02/apache-flv-streaming-done-right.html)
- [Anything PHP-enabled](http://richbellamy.com/wiki/Flash_Streaming_to_FlowPlayer_using_only_PHP)
- [IIS](http://flowplayer.org/forum/5/14702)


Compilation
-----------
flvplayer has been created using fluby, so compilation is pretty straightforward:

     $ cd flvplayer
     $ rake

There are some additional rake tasks available:

- rake clobber_package  # Remove package products
- rake package          # Build all the packages
- rake release          # Build a release version of flvplayer (with trace() disabled)
- rake repackage        # Force a rebuild of the package files
- rake test             # Test the SWF file in your default browser


Customization
-------------

All images used in the player are available inside the 'assets' folder, in Fireworks CS3 vector format.

If you want to change the look & feel of your player, just edit the PNG files and recompile.


LICENSE
-------
flvplayer is released under the MIT License. Feel free to use the software
as you please, but it would be nice if you shared your improvements even
if it's not required :)

Copyright (c) 2009 Ale Mu√±oz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.